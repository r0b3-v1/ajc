commencement de la partie réseau à proprement parler, voir document caleca dans les cours file:///E:/Telechargement/Caleca-04-TCPIP-v4__54__0__303__0.pdf
le protocole TCP/IP
internet != web
on parle de pile(stack) TCP/IP, elle est implémentée dans le noyau de l'OS. Fonctionne en client serveur
Modèle OSI : modèle qui régit tout type de protocole réseau, défini par l'ISO (international standardisation organisation)
c'est un modèle par couches. c'est quoi une couche? "Un ensemble de services accomplissant un but précis"
chaque couche s'occupe d'une chose. Les couches communiquent entre elles, les couches inférieures sont plus proches du matériel, les supérieures, plus proches des applications
Il y a 7 couches dans le modèle

En physique : 
1-La couche physique : les cables
2-Liaison : la carte réseau (wifi, ethernet)

Dans l'OS :
3-reseau 
4-transport
5-session : pour accéder à un service sur une machine, il nous faut une session d'accès, d'où l'existence de cette couche
6-présentation : façon dont on présente les données à l'application, exemple si les données sont chiffrées
7-applications : les applications réseaux, par exemple http, smtp pour les mails, ftp, dns, dhcp


Pour comprendre l'idée, imaginons 2 machines A et B qui doivent communiquer suivant un protocole respectant le modèle OSI

A a un navigateur web et B un serveur web
ici couche 7 A de c'est le navigateur web
la demande de A va descendre toutes les couches de la machine A pour atteindre B. à chaque couche, la demande va être augmentée des infos de la couche qu'elle traverse. Le résultat est une trame, qui contient les infos de toutes les couches et qui va être envoyée dans le réseau vers B
Ensuite quand elle arrive dans la machine B, elle va remonter toutes les couches jusqu'à arriver à l'application. Puis rebelote de B vers A pour envoyer une réponse
C'est ce qu'on appelle l'encapsulation, la demande est encapsulée par toutes les données des couches.

Il y a aussi le modèle internet, qui ne contient que 5 couches, parce qu'ils ont fusionné session et représentation et l'ont mit dans application ( donc 3 couches supérieures fusionnées en une seule)
Chaque couche a des protocoles pour faire certaines choses
1: nous intéresse pas
2: protocole ethernet II
3: protocoles IP (internet protocol), ICMP (Internet Control Message Protocol), ARP (Adress Resolution Protocol), + protocoles de routage
4: protocoles TCP (Transport Control Protocol), UDP (User Datagram Protocol)
5: HTTP, SMTP, FTP, DNS, DHCP, NTP (pour que les machines soient à la même heure), etc

_____la couche de liaison : 
il y a un protocole qui s'appelle ethernet II
une carte réseau est caractérisée par son adresse MAC, unique en hexadecimale sur 48 bits, on la voit en faisant ip a après link/ether
quand les machines se parlent avec leurs adresses MAC, c'est le CSMA/CD, pour gérer les collisions

_____la couche réseau :
IP,ICMP,ARP + les protocoles de routage
	-> IP : Internet Protocol. On est déjà dans une logique logicielle, et plus hardware. 
		-> l'adressage IP, comment on identifie les machines sur le réseau?
		On a soit l'IPv4, codée sur 32 bits, 4 octets. Sur un même réseau on ne peut pas avoir deux adresses avec la même adresse IP
		Pour l'IPv6, on les a codées sur 128 bits, donc beaucoup plus d'adresses possibles (2^128)
		les adresses ont des classes, A,B,C,D, commencement des adresses: A=0.0.0.1, B=128.0.0.1, C=192.0.0.1, D=224.0.0.1
		selon la classe utilisée, on peut mettre un certain nombre de machines sur le réeseau. Quand on fait ip a, le / après l'adresse ip correspond au nombre de bits sur lequel est codé le réseau, exemple une classe C sera/24. Dans une classe, on peut prendre toutes les adresses sauf celle commençant par 255 (adresse de broadcast) et celle finissant par 0. Donc sur un réseau de classe C par exemple, on peut mettre 256-2 ip différentes. Sur un de classe A 2^24-2 possibles
		Pourquoi on a plusieurs classes différentes? Internet composés de différents réseaux, imaginons un de classe A relié à un de classe B, impossible ils ne peuvent pas communiquer. Pour que ça fonctionne, il faut mettre un routeur entre ces deux réseaux
		chaque classe est séparée en deux parties, il y a des adresses dites privées, voir page 11 du document. Les réseaux privés ne peuvent pas communiquer sur internet (pas le web, on parle de protocole)
		donc en gros par exemple je peux me faire un gros réseau privé de classe A avec beaucoup de machines dedans et n'avoir qu'une seule adresse publique, celle du routeur
		-> la fragmentation et le réassemblage. On parle de paquets IP, il y a un algo qui prend la data des paquets, la découpe. Il y a aussi le réassemblage de cette data découpée. On parle de protocole à commutation de paquets

Comment configurer nous même le réseau de nos machines virtuelles? Nous pour l'instant on a juste mis accès par pont et ça a marché, la machine virtuelle est donc sur le même réseau que nos machine physique
il y a un endroit où on peut paramétrer l'adressage de notre machine, 
il faut aller dans /etc/network/interfaces pour paramétrer tout ça
dedans on peut fixer notre adresse et notre masque, exemple en ajoutant
address 192.168.1.100
netmask 255.255.255.0

loopback on touche pas, dhcp est un service qui distribue des adresses ip aux machines, on doit le remplacer par static pour pouvoir fixer notre adresse ip
une fois qu'on a fait ces modifs, il faut restart le service networking.service pour que ce soit pris en compte

